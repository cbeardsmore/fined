service: fined
app: fined
org: cbeardsmore

provider:
  name: aws
  runtime: python3.7
  region: us-east-1
  apiName: ${self:service}
  stage: ${opt:stage,'dev'}
  environment:
    DYNAMODB_TABLE_FINES: ${self:service}-${self:provider.stage}-fines
    DYNAMODB_TABLE_TOKENS: ${self:service}-${self:provider.stage}-tokens
    SLACK_SIGNING_SECRET: ${ssm:/${self:service}/${self:provider.stage}/SLACK_SIGNING_SECRET~true}
    CLIENT_ID: ${ssm:/${self:service}/${self:provider.stage}/CLIENT_ID~true}
    CLIENT_SECRET: ${ssm:/${self:service}/${self:provider.stage}/CLIENT_SECRET~true}

  memorySize: 512
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_FINES}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_TOKENS}'
  stackTags:
    PROJECT: ${self:service}

custom:
  apiGatewayThrottling:
    maxRequestsPerSecond: 10
    maxConcurrentRequests: 40

functions:
  fine:
    handler: fine.handle
    description: Fine a user a given amount
    events:
      - http:
          path: fine
          method: post
  fines:
    handler: fines.handle
    description: List all channel fines
    events:
      - http:
          path: fines
          method: post
  interaction:
    handler: interaction.handle
    description: Interactivity endpoint for Slack interactive payloads
    events:
      - http:
          path: interaction
          method: post
  oauth:
    handler: oauth.handle
    description: OAuth endpoint to exchange Slack code for workspace access tokens 
    events:
      - http:
          path: oauth
          method: get

resources:
  Resources:
    finesTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_FINES}
        AttributeDefinitions:
          - AttributeName: teamChannelId
            AttributeType: S
        KeySchema:
          - AttributeName: teamChannelId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    tokensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_TOKENS}
        AttributeDefinitions:
          - AttributeName: teamId
            AttributeType: S
        KeySchema:
          - AttributeName: teamId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
plugins:
  - serverless-python-requirements
  - serverless-api-gateway-throttling

package:
  exclude:
    - assets/
    - node_modules/**
    - test/**
